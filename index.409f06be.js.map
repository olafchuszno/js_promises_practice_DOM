{"mappings":"ACgDA,SAAS,EAAS,CAAO,CAAE,CAAI,EAC7B,SAAS,IAAI,CAAC,SAAS,EAAK,sCAA8C,MAAA,CAAT,EAAK,MAAY,MAAA,CAAR,EAAQ,QACpF,CAEA,AAjDS,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,WAAW,WACT,EAAO,AAAI,MAAM,8BACnB,EAAG,KAEH,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAQ,6BACV,EACF,GA0CC,IAAI,CAAC,SAAC,CADT,EACqB,OAAA,EAAS,EAAS,UACpC,GAAA,KAAK,CAAC,SAAC,CAAP,EACC,EAAS,EAAa,OAAO,CAAE,UACjC,GAEF,AA3CS,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,CAAC,QAAS,cAAc,CAAC,OAAO,CAAC,SAAC,CAAV,EACtB,SAAS,gBAAgB,CAAC,EAAM,WAC9B,EAAQ,8BACV,EACF,EACF,GAsCC,IAAI,CAAC,SAAC,CADT,EACqB,OAAA,EAAS,EAAS,UACpC,GAAA,KAAK,CAAC,SAAC,CAAP,EACC,EAAS,EAAa,OAAO,CAAE,UACjC,GAEF,AAvCS,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,IAAI,EAAa,EAEb,EAAc,EAElB,SAAS,gBAAgB,CAAC,QAAS,WAC7B,GACF,EAAQ,8BAGV,GACF,GAEA,SAAS,gBAAgB,CAAC,cAAe,WACnC,GACF,EAAQ,8BAGV,GACF,EACF,GAoBC,IAAI,CAAC,SAAC,CADT,EACqB,OAAA,EAAS,EAAS,UACpC,GAAA,KAAK,CAAC,SAAC,CAAP,EACC,EAAS,EAAa,OAAO,CAAE,UACjC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar firstPromise = function() {\n    return new Promise(function(resolve, reject) {\n        setTimeout(function() {\n            reject(new Error(\"First promise was rejected\"));\n        }, 3000);\n        document.addEventListener(\"click\", function() {\n            resolve(\"First promise was resolved\");\n        });\n    });\n};\nvar secondPromise = function() {\n    return new Promise(function(resolve, reject) {\n        [\n            \"click\",\n            \"contextmenu\"\n        ].forEach(function(type) {\n            document.addEventListener(type, function() {\n                resolve(\"Second promise was resolved\");\n            });\n        });\n    });\n};\nvar thirdPromise = function() {\n    return new Promise(function(resolve, reject) {\n        var rightClick = 0;\n        var contextmenu = 0;\n        document.addEventListener(\"click\", function() {\n            if (contextmenu) resolve(\"Third promise was resolved\");\n            rightClick++;\n        });\n        document.addEventListener(\"contextmenu\", function() {\n            if (rightClick) resolve(\"Third promise was resolved\");\n            contextmenu++;\n        });\n    });\n};\nfunction response(message, type) {\n    document.body.innerHTML += '<div data-qa=\"notification\" class=\"'.concat(type, '\">').concat(message, \"<div>\");\n}\nfirstPromise().then(function(message) {\n    return response(message, \"success\");\n}).catch(function(errorMessage) {\n    response(errorMessage.message, \"failure\");\n});\nsecondPromise().then(function(message) {\n    return response(message, \"success\");\n}).catch(function(errorMessage) {\n    response(errorMessage.message, \"failure\");\n});\nthirdPromise().then(function(message) {\n    return response(message, \"success\");\n}).catch(function(errorMessage) {\n    response(errorMessage.message, \"failure\");\n});\n\n//# sourceMappingURL=index.409f06be.js.map\n","'use strict';\n\nconst firstPromise = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(new Error('First promise was rejected'));\n    }, 3000);\n\n    document.addEventListener('click', () => {\n      resolve('First promise was resolved');\n    });\n  });\n};\n\nconst secondPromise = () => {\n  return new Promise((resolve, reject) => {\n    ['click', 'contextmenu'].forEach((type) => {\n      document.addEventListener(type, () => {\n        resolve('Second promise was resolved');\n      });\n    });\n  });\n};\n\nconst thirdPromise = () => {\n  return new Promise((resolve, reject) => {\n    let rightClick = 0;\n\n    let contextmenu = 0;\n\n    document.addEventListener('click', () => {\n      if (contextmenu) {\n        resolve('Third promise was resolved');\n      }\n\n      rightClick++;\n    });\n\n    document.addEventListener('contextmenu', () => {\n      if (rightClick) {\n        resolve('Third promise was resolved');\n      }\n\n      contextmenu++;\n    });\n  });\n};\n\nfunction response(message, type) {\n  document.body.innerHTML += `<div data-qa=\"notification\" class=\"${type}\">${message}<div>`;\n}\n\nfirstPromise()\n  .then((message) => response(message, 'success'))\n  .catch((errorMessage) => {\n    response(errorMessage.message, 'failure');\n  });\n\nsecondPromise()\n  .then((message) => response(message, 'success'))\n  .catch((errorMessage) => {\n    response(errorMessage.message, 'failure');\n  });\n\nthirdPromise()\n  .then((message) => response(message, 'success'))\n  .catch((errorMessage) => {\n    response(errorMessage.message, 'failure');\n  });\n"],"names":["response","message","type","document","body","innerHTML","concat","firstPromise","Promise","resolve","reject","setTimeout","Error","addEventListener","then","catch","errorMessage","secondPromise","forEach","thirdPromise","rightClick","contextmenu"],"version":3,"file":"index.409f06be.js.map"}